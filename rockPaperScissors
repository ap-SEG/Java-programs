public class rockPaperScissors
{
    public static void main (String args[])
    {
 new rockPaperScissors ();
    }

/* On this program, you are working with a team....
   The responsibility of the other person on the team 
       was to code the constructor.
   Your job is to code the other methods.
   Follow the comments.
   You are not allowed to edit the constructor.
*/

    public rockPaperScissors ()
    {
 int cPoint = 0;
 int uPoint = 0;
 int game = 1;
 char playAgain = 'y';
 System.out.println ("-----Rock, Paper, Scissors------\n");
 while (playAgain == 'y')
 {

     char user = userChoice ();
     System.out.println ("You have selected " + user);
     char comp = compChoice ();
     System.out.println ("The computer has selected " + comp);
     char win = winner (comp,user);
     if (win == 'c')
     {
  cPoint++;
  System.out.println ("\nThe computer wins!");
     }
     else if (win == 'u')
     {
  uPoint++;
  System.out.println ("\nYou win!");

     }
     else
  System.out.println ("\nThere is a tie!");
     System.out.println ("Points: You: " + uPoint + " Computer: " + cPoint);
     playAgain = IBIO.inputChar ("\nPlay again? (y/n) ");
     System.out.println ("");
 }
 System.out.println ("Goodbye!");
    }


    public boolean isValid (String c)
    {
 /* All valid data:
        Rock, ROCK, rock, r, R
        Paper, PAPER, paper, p, P
        Scissors, SCISSORS, scissors, s, S
    return true if valid, false otherwise
 */
 if (c.equalsIgnoreCase ("Rock"))   
     return true;
 else if (c.equalsIgnoreCase ("Paper"))
     return true;
 else if (c.equalsIgnoreCase ("Scissors")) 
     return true;
 else if (c.equalsIgnoreCase ("r")) 
     return true;
 else if (c.equalsIgnoreCase ("p")) 
     return true;    
 else if (c.equalsIgnoreCase ("s")) 
     return true;
 else
     return false;
    }


    public char userChoice ()
    { //print options: rock, paper, scissors

 //ask for user's choice. will need to store in String

 //Loop: if invalid input, ask again
 //stopping condition is the isValid method!!

 //If: transfer values - Rock, ROCK, rock, r, R - to r, etc.

 //return r, p or s
 System.out.println ("Options: Rock, Paper, or Scissors ");
 String choice = IBIO.inputString ("Pick Rock, Paper or Scissors: ");
 while (!isValid (choice))
 {
     choice = IBIO.inputString ("Pick Rock, Paper or Scissors: ");
 }
  if (choice.equalsIgnoreCase ("Rock"))   
     return 'r';
 else if (choice.equalsIgnoreCase ("Paper"))
     return 'p';
 else if (choice.equalsIgnoreCase ("Scissors")) 
     return 's';
 else if (choice.equalsIgnoreCase ("r")) 
     return 'r';
 else if (choice.equalsIgnoreCase ("p")) 
     return 'p';    
 else if (choice.equalsIgnoreCase ("s")) 
     return 's';
 else
     return 'p';
    }


    public char compChoice ()
    { //make a random number between 1 and 3
 //if the number is 1, return r; 2 return s; 3 return p

 int num = (int)(Math.random () * 3) + 1;
 if (num == 1) 
     return 'r';
 else if (num == 2)
     return 's';
 else 
     return 'p';
     
    }


    public char winner (char comp, char user)
    { //comp and user both hold r, s, p
 //returns c for computer, u for user and b for both
 if (comp == 's' && user == 'p')
     return 'c';
 else if (comp == 's' && user == 's')
     return 'b';
 else if (comp == 's' && user == 'r')
     return 'u';
 else if (comp == 'r' && user == 'p')
     return 'u';
 else if (comp == 'r' && user == 'r')
     return 'b';
 else if (comp == 'r' && user == 's')
     return 'c';
 else if (comp == 'p' && user == 'r')
     return 'c';    
 else if (comp == 'p' && user == 'p')
     return 'b';    
 else if (comp == 'p' && user == 's')
     return 'u';    
 else
     return 'u';
    }
}



